{
  "metadata" : {
    "formatVersion" : {
      "major" : 0,
      "minor" : 5,
      "patch" : 0
    },
    "generator" : "SymbolKit"
  },
  "module" : {
    "name" : "Test",
    "platform" : {
      "architecture" : "x86_64",
      "operatingSystem" : {
        "minimumVersion" : {
          "major" : 13,
          "minor" : 0,
          "patch" : 0
        },
        "name" : "macos"
      },
      "vendor" : "apple"
    }
  },
  "relationships" : [
    {
      "kind" : "memberOf",
      "source" : "c:@E@TestExtensions@TestExtensionsAutolinkedURLs",
      "target" : "c:@E@TestExtensions",
      "targetFallback" : null
    },
    {
      "kind" : "memberOf",
      "source" : "c:@E@TestExtensions@TestExtensionsFencedCodeBlocks",
      "target" : "c:@E@TestExtensions",
      "targetFallback" : null
    },
    {
      "kind" : "memberOf",
      "source" : "c:@E@TestExtensions@TestExtensionsGitHubFlavored",
      "target" : "c:@E@TestExtensions",
      "targetFallback" : null
    },
    {
      "kind" : "memberOf",
      "source" : "c:@E@TestExtensions@TestExtensionsHardNewlines",
      "target" : "c:@E@TestExtensions",
      "targetFallback" : null
    },
    {
      "kind" : "memberOf",
      "source" : "c:@E@TestExtensions@TestExtensionsNone",
      "target" : "c:@E@TestExtensions",
      "targetFallback" : null
    },
    {
      "kind" : "memberOf",
      "source" : "c:@E@TestExtensions@TestExtensionsStrikethroughs",
      "target" : "c:@E@TestExtensions",
      "targetFallback" : null
    },
    {
      "kind" : "memberOf",
      "source" : "c:@E@TestExtensions@TestExtensionsTables",
      "target" : "c:@E@TestExtensions",
      "targetFallback" : null
    },
    {
      "kind" : "memberOf",
      "source" : "c:@E@TestExtensions@TestExtensionsUnderscoresInWords",
      "target" : "c:@E@TestExtensions",
      "targetFallback" : null
    },
    {
      "kind" : "inheritsFrom",
      "source" : "c:objc(cs)Test",
      "target" : "c:objc(cs)NSObject",
      "targetFallback" : "NSObject"
    },
    {
      "kind" : "memberOf",
      "source" : "c:objc(cs)Test(cm)HTMLStringWithMarkdown:error:",
      "target" : "c:objc(cs)Test",
      "targetFallback" : null
    },
    {
      "kind" : "memberOf",
      "source" : "c:objc(cs)Test(cm)HTMLStringWithMarkdown:extensions:error:",
      "target" : "c:objc(cs)Test",
      "targetFallback" : null
    }
  ],
  "symbols" : [
    {
      "accessLevel" : "public",
      "declarationFragments" : [
        {
          "kind" : "keyword",
          "spelling" : "@interface"
        },
        {
          "kind" : "text",
          "spelling" : " "
        },
        {
          "kind" : "identifier",
          "spelling" : "Test"
        },
        {
          "kind" : "text",
          "spelling" : " : "
        },
        {
          "kind" : "typeIdentifier",
          "preciseIdentifier" : "c:objc(cs)NSObject",
          "spelling" : "NSObject"
        }
      ],
      "docComment" : {
        "lines" : [
          {
            "range" : {
              "end" : {
                "character" : 13,
                "line" : 52
              },
              "start" : {
                "character" : 4,
                "line" : 52
              }
            },
            "text" : "@overview"
          }
        ]
      },
      "identifier" : {
        "interfaceLanguage" : "occ",
        "precise" : "c:objc(cs)Test"
      },
      "kind" : {
        "displayName" : "Class",
        "identifier" : "class"
      },
      "location" : {
        "position" : {
          "character" : 11,
          "line" : 53
        },
        "uri" : "Test.h"
      },
      "names" : {
        "navigator" : [
          {
            "kind" : "identifier",
            "spelling" : "Test"
          }
        ],
        "subHeading" : [
          {
            "kind" : "identifier",
            "spelling" : "Test"
          }
        ],
        "title" : "Test"
      },
      "pathComponents" : [
        "Test"
      ]
    },
    {
      "accessLevel" : "public",
      "declarationFragments" : [
        {
          "kind" : "text",
          "spelling" : "+ ("
        },
        {
          "kind" : "typeIdentifier",
          "preciseIdentifier" : "c:objc(cs)NSString",
          "spelling" : "NSString"
        },
        {
          "kind" : "text",
          "spelling" : " *) "
        },
        {
          "kind" : "identifier",
          "spelling" : "HTMLStringWithMarkdown:"
        },
        {
          "kind" : "text",
          "spelling" : "("
        },
        {
          "kind" : "typeIdentifier",
          "preciseIdentifier" : "c:objc(cs)NSString",
          "spelling" : "NSString"
        },
        {
          "kind" : "text",
          "spelling" : " *)"
        },
        {
          "kind" : "internalParam",
          "spelling" : "string"
        },
        {
          "kind" : "text",
          "spelling" : " "
        },
        {
          "kind" : "identifier",
          "spelling" : "error:"
        },
        {
          "kind" : "text",
          "spelling" : "("
        },
        {
          "kind" : "typeIdentifier",
          "preciseIdentifier" : "c:objc(cs)NSError",
          "spelling" : "NSError"
        },
        {
          "kind" : "text",
          "spelling" : " * *)"
        },
        {
          "kind" : "internalParam",
          "spelling" : "error"
        },
        {
          "kind" : "text",
          "spelling" : ";"
        }
      ],
      "docComment" : {
        "lines" : [
          {
            "range" : {
              "end" : {
                "character" : 3,
                "line" : 55
              },
              "start" : {
                "character" : 3,
                "line" : 55
              }
            },
            "text" : ""
          },
          {
            "range" : {
              "end" : {
                "character" : 35,
                "line" : 56
              },
              "start" : {
                "character" : 0,
                "line" : 56
              }
            },
            "text" : " Convert a Markdown string to HTML."
          },
          {
            "range" : {
              "end" : {
                "character" : 1,
                "line" : 57
              },
              "start" : {
                "character" : 0,
                "line" : 57
              }
            },
            "text" : " "
          },
          {
            "range" : {
              "end" : {
                "character" : 14,
                "line" : 58
              },
              "start" : {
                "character" : 0,
                "line" : 58
              }
            },
            "text" : " @param string"
          },
          {
            "range" : {
              "end" : {
                "character" : 50,
                "line" : 59
              },
              "start" : {
                "character" : 0,
                "line" : 59
              }
            },
            "text" : "    A Markdown string. Must not be nil. @objective"
          },
          {
            "range" : {
              "end" : {
                "character" : 13,
                "line" : 60
              },
              "start" : {
                "character" : 0,
                "line" : 60
              }
            },
            "text" : " @param error"
          },
          {
            "range" : {
              "end" : {
                "character" : 82,
                "line" : 61
              },
              "start" : {
                "character" : 0,
                "line" : 61
              }
            },
            "text" : "    Out parameter used if an error occurs while parsing the Markdown. May be NULL."
          },
          {
            "range" : {
              "end" : {
                "character" : 8,
                "line" : 62
              },
              "start" : {
                "character" : 0,
                "line" : 62
              }
            },
            "text" : " @result"
          },
          {
            "range" : {
              "end" : {
                "character" : 27,
                "line" : 63
              },
              "start" : {
                "character" : 0,
                "line" : 63
              }
            },
            "text" : "    Returns an HTML string."
          },
          {
            "range" : {
              "end" : {
                "character" : 3,
                "line" : 64
              },
              "start" : {
                "character" : 0,
                "line" : 64
              }
            },
            "text" : " "
          }
        ]
      },
      "functionSignature" : {
        "parameters" : [
          {
            "children" : [

            ],
            "declarationFragments" : [
              {
                "kind" : "text",
                "spelling" : "("
              },
              {
                "kind" : "typeIdentifier",
                "preciseIdentifier" : "c:objc(cs)NSString",
                "spelling" : "NSString"
              },
              {
                "kind" : "text",
                "spelling" : " *)"
              },
              {
                "kind" : "internalParam",
                "spelling" : "string"
              }
            ],
            "name" : "string"
          },
          {
            "children" : [

            ],
            "declarationFragments" : [
              {
                "kind" : "text",
                "spelling" : "("
              },
              {
                "kind" : "typeIdentifier",
                "preciseIdentifier" : "c:objc(cs)NSError",
                "spelling" : "NSError"
              },
              {
                "kind" : "text",
                "spelling" : " * *)"
              },
              {
                "kind" : "internalParam",
                "spelling" : "error"
              }
            ],
            "name" : "error"
          }
        ],
        "returns" : [
          {
            "kind" : "typeIdentifier",
            "preciseIdentifier" : "c:objc(cs)NSString",
            "spelling" : "NSString"
          },
          {
            "kind" : "text",
            "spelling" : " *"
          }
        ]
      },
      "identifier" : {
        "interfaceLanguage" : "occ",
        "precise" : "c:objc(cs)Test(cm)HTMLStringWithMarkdown:error:"
      },
      "kind" : {
        "displayName" : "Type Method",
        "identifier" : "type.method"
      },
      "location" : {
        "position" : {
          "character" : 0,
          "line" : 65
        },
        "uri" : "Test.h"
      },
      "names" : {
        "navigator" : [
          {
            "kind" : "identifier",
            "spelling" : "HTMLStringWithMarkdown:error:"
          }
        ],
        "subHeading" : [
          {
            "kind" : "text",
            "spelling" : "+ "
          },
          {
            "kind" : "identifier",
            "spelling" : "HTMLStringWithMarkdown:error:"
          }
        ],
        "title" : "HTMLStringWithMarkdown:error:"
      },
      "pathComponents" : [
        "Test",
        "HTMLStringWithMarkdown:error:"
      ]
    },
    {
      "accessLevel" : "public",
      "declarationFragments" : [
        {
          "kind" : "text",
          "spelling" : "+ ("
        },
        {
          "kind" : "typeIdentifier",
          "preciseIdentifier" : "c:objc(cs)NSString",
          "spelling" : "NSString"
        },
        {
          "kind" : "text",
          "spelling" : " *) "
        },
        {
          "kind" : "identifier",
          "spelling" : "HTMLStringWithMarkdown:"
        },
        {
          "kind" : "text",
          "spelling" : "("
        },
        {
          "kind" : "typeIdentifier",
          "preciseIdentifier" : "c:objc(cs)NSString",
          "spelling" : "NSString"
        },
        {
          "kind" : "text",
          "spelling" : " *)"
        },
        {
          "kind" : "internalParam",
          "spelling" : "string"
        },
        {
          "kind" : "text",
          "spelling" : " "
        },
        {
          "kind" : "identifier",
          "spelling" : "extensions:"
        },
        {
          "kind" : "text",
          "spelling" : "("
        },
        {
          "kind" : "typeIdentifier",
          "preciseIdentifier" : "c:@E@TestExtensions",
          "spelling" : "TestExtensions"
        },
        {
          "kind" : "text",
          "spelling" : ")"
        },
        {
          "kind" : "internalParam",
          "spelling" : "extensions"
        },
        {
          "kind" : "text",
          "spelling" : " "
        },
        {
          "kind" : "identifier",
          "spelling" : "error:"
        },
        {
          "kind" : "text",
          "spelling" : "("
        },
        {
          "kind" : "typeIdentifier",
          "preciseIdentifier" : "c:objc(cs)NSError",
          "spelling" : "NSError"
        },
        {
          "kind" : "text",
          "spelling" : " * *)"
        },
        {
          "kind" : "internalParam",
          "spelling" : "error"
        },
        {
          "kind" : "text",
          "spelling" : ";"
        }
      ],
      "docComment" : {
        "lines" : [
          {
            "range" : {
              "end" : {
                "character" : 3,
                "line" : 67
              },
              "start" : {
                "character" : 3,
                "line" : 67
              }
            },
            "text" : ""
          },
          {
            "range" : {
              "end" : {
                "character" : 35,
                "line" : 68
              },
              "start" : {
                "character" : 0,
                "line" : 68
              }
            },
            "text" : " Convert a Markdown string to HTML."
          },
          {
            "range" : {
              "end" : {
                "character" : 1,
                "line" : 69
              },
              "start" : {
                "character" : 0,
                "line" : 69
              }
            },
            "text" : " "
          },
          {
            "range" : {
              "end" : {
                "character" : 14,
                "line" : 70
              },
              "start" : {
                "character" : 0,
                "line" : 70
              }
            },
            "text" : " @param string"
          },
          {
            "range" : {
              "end" : {
                "character" : 39,
                "line" : 71
              },
              "start" : {
                "character" : 0,
                "line" : 71
              }
            },
            "text" : "    A Markdown string. Must not be nil."
          },
          {
            "range" : {
              "end" : {
                "character" : 18,
                "line" : 72
              },
              "start" : {
                "character" : 0,
                "line" : 72
              }
            },
            "text" : " @param extensions"
          },
          {
            "range" : {
              "end" : {
                "character" : 29,
                "line" : 73
              },
              "start" : {
                "character" : 0,
                "line" : 73
              }
            },
            "text" : "    The extensions to enable."
          },
          {
            "range" : {
              "end" : {
                "character" : 13,
                "line" : 74
              },
              "start" : {
                "character" : 0,
                "line" : 74
              }
            },
            "text" : " @param error"
          },
          {
            "range" : {
              "end" : {
                "character" : 82,
                "line" : 75
              },
              "start" : {
                "character" : 0,
                "line" : 75
              }
            },
            "text" : "    Out parameter used if an error occurs while parsing the Markdown. May be NULL."
          },
          {
            "range" : {
              "end" : {
                "character" : 8,
                "line" : 76
              },
              "start" : {
                "character" : 0,
                "line" : 76
              }
            },
            "text" : " @result"
          },
          {
            "range" : {
              "end" : {
                "character" : 1,
                "line" : 77
              },
              "start" : {
                "character" : 0,
                "line" : 77
              }
            },
            "text" : " "
          },
          {
            "range" : {
              "end" : {
                "character" : 7,
                "line" : 78
              },
              "start" : {
                "character" : 0,
                "line" : 78
              }
            },
            "text" : " @Image"
          },
          {
            "range" : {
              "end" : {
                "character" : 27,
                "line" : 79
              },
              "start" : {
                "character" : 0,
                "line" : 79
              }
            },
            "text" : "    Returns an HTML string."
          },
          {
            "range" : {
              "end" : {
                "character" : 3,
                "line" : 80
              },
              "start" : {
                "character" : 0,
                "line" : 80
              }
            },
            "text" : " "
          },
          {
            "range" : {
              "end" : {
                "character" : 13,
                "line" : 81
              },
              "start" : {
                "character" : 3,
                "line" : 81
              }
            },
            "text" : " @overview"
          }
        ]
      },
      "functionSignature" : {
        "parameters" : [
          {
            "children" : [

            ],
            "declarationFragments" : [
              {
                "kind" : "text",
                "spelling" : "("
              },
              {
                "kind" : "typeIdentifier",
                "preciseIdentifier" : "c:objc(cs)NSString",
                "spelling" : "NSString"
              },
              {
                "kind" : "text",
                "spelling" : " *)"
              },
              {
                "kind" : "internalParam",
                "spelling" : "string"
              }
            ],
            "name" : "string"
          },
          {
            "children" : [

            ],
            "declarationFragments" : [
              {
                "kind" : "text",
                "spelling" : "("
              },
              {
                "kind" : "typeIdentifier",
                "preciseIdentifier" : "c:@E@TestExtensions",
                "spelling" : "TestExtensions"
              },
              {
                "kind" : "text",
                "spelling" : ")"
              },
              {
                "kind" : "internalParam",
                "spelling" : "extensions"
              }
            ],
            "name" : "extensions"
          },
          {
            "children" : [

            ],
            "declarationFragments" : [
              {
                "kind" : "text",
                "spelling" : "("
              },
              {
                "kind" : "typeIdentifier",
                "preciseIdentifier" : "c:objc(cs)NSError",
                "spelling" : "NSError"
              },
              {
                "kind" : "text",
                "spelling" : " * *)"
              },
              {
                "kind" : "internalParam",
                "spelling" : "error"
              }
            ],
            "name" : "error"
          }
        ],
        "returns" : [
          {
            "kind" : "typeIdentifier",
            "preciseIdentifier" : "c:objc(cs)NSString",
            "spelling" : "NSString"
          },
          {
            "kind" : "text",
            "spelling" : " *"
          }
        ]
      },
      "identifier" : {
        "interfaceLanguage" : "occ",
        "precise" : "c:objc(cs)Test(cm)HTMLStringWithMarkdown:extensions:error:"
      },
      "kind" : {
        "displayName" : "Type Method",
        "identifier" : "type.method"
      },
      "location" : {
        "position" : {
          "character" : 0,
          "line" : 82
        },
        "uri" : "Test.h"
      },
      "names" : {
        "navigator" : [
          {
            "kind" : "identifier",
            "spelling" : "HTMLStringWithMarkdown:extensions:error:"
          }
        ],
        "subHeading" : [
          {
            "kind" : "text",
            "spelling" : "+ "
          },
          {
            "kind" : "identifier",
            "spelling" : "HTMLStringWithMarkdown:extensions:error:"
          }
        ],
        "title" : "HTMLStringWithMarkdown:extensions:error:"
      },
      "pathComponents" : [
        "Test",
        "HTMLStringWithMarkdown:extensions:error:"
      ]
    },
    {
      "accessLevel" : "public",
      "declarationFragments" : [
        {
          "kind" : "keyword",
          "spelling" : "enum"
        },
        {
          "kind" : "text",
          "spelling" : " "
        },
        {
          "kind" : "identifier",
          "spelling" : "TestExtensions"
        },
        {
          "kind" : "text",
          "spelling" : ": "
        },
        {
          "kind" : "typeIdentifier",
          "preciseIdentifier" : "c:l",
          "spelling" : "NSUInteger"
        }
      ],
      "identifier" : {
        "interfaceLanguage" : "occ",
        "precise" : "c:@E@TestExtensions"
      },
      "kind" : {
        "displayName" : "Enumeration",
        "identifier" : "enum"
      },
      "location" : {
        "position" : {
          "character" : 8,
          "line" : 33
        },
        "uri" : "Test.h"
      },
      "names" : {
        "navigator" : [
          {
            "kind" : "identifier",
            "spelling" : "TestExtensions"
          }
        ],
        "subHeading" : [
          {
            "kind" : "identifier",
            "spelling" : "TestExtensions"
          }
        ],
        "title" : "TestExtensions"
      },
      "pathComponents" : [
        "TestExtensions"
      ]
    },
    {
      "accessLevel" : "public",
      "declarationFragments" : [
        {
          "kind" : "identifier",
          "spelling" : "TestExtensionsAutolinkedURLs"
        }
      ],
      "identifier" : {
        "interfaceLanguage" : "occ",
        "precise" : "c:@E@TestExtensions@TestExtensionsAutolinkedURLs"
      },
      "kind" : {
        "displayName" : "Enumeration Case",
        "identifier" : "enum.case"
      },
      "location" : {
        "position" : {
          "character" : 4,
          "line" : 37
        },
        "uri" : "Test.h"
      },
      "names" : {
        "navigator" : [
          {
            "kind" : "identifier",
            "spelling" : "TestExtensionsAutolinkedURLs"
          }
        ],
        "subHeading" : [
          {
            "kind" : "identifier",
            "spelling" : "TestExtensionsAutolinkedURLs"
          }
        ],
        "title" : "TestExtensionsAutolinkedURLs"
      },
      "pathComponents" : [
        "TestExtensions",
        "TestExtensionsAutolinkedURLs"
      ]
    },
    {
      "accessLevel" : "public",
      "declarationFragments" : [
        {
          "kind" : "identifier",
          "spelling" : "TestExtensionsFencedCodeBlocks"
        }
      ],
      "identifier" : {
        "interfaceLanguage" : "occ",
        "precise" : "c:@E@TestExtensions@TestExtensionsFencedCodeBlocks"
      },
      "kind" : {
        "displayName" : "Enumeration Case",
        "identifier" : "enum.case"
      },
      "location" : {
        "position" : {
          "character" : 4,
          "line" : 40
        },
        "uri" : "Test.h"
      },
      "names" : {
        "navigator" : [
          {
            "kind" : "identifier",
            "spelling" : "TestExtensionsFencedCodeBlocks"
          }
        ],
        "subHeading" : [
          {
            "kind" : "identifier",
            "spelling" : "TestExtensionsFencedCodeBlocks"
          }
        ],
        "title" : "TestExtensionsFencedCodeBlocks"
      },
      "pathComponents" : [
        "TestExtensions",
        "TestExtensionsFencedCodeBlocks"
      ]
    },
    {
      "accessLevel" : "public",
      "declarationFragments" : [
        {
          "kind" : "identifier",
          "spelling" : "TestExtensionsGitHubFlavored"
        }
      ],
      "identifier" : {
        "interfaceLanguage" : "occ",
        "precise" : "c:@E@TestExtensions@TestExtensionsGitHubFlavored"
      },
      "kind" : {
        "displayName" : "Enumeration Case",
        "identifier" : "enum.case"
      },
      "location" : {
        "position" : {
          "character" : 4,
          "line" : 48
        },
        "uri" : "Test.h"
      },
      "names" : {
        "navigator" : [
          {
            "kind" : "identifier",
            "spelling" : "TestExtensionsGitHubFlavored"
          }
        ],
        "subHeading" : [
          {
            "kind" : "identifier",
            "spelling" : "TestExtensionsGitHubFlavored"
          }
        ],
        "title" : "TestExtensionsGitHubFlavored"
      },
      "pathComponents" : [
        "TestExtensions",
        "TestExtensionsGitHubFlavored"
      ]
    },
    {
      "accessLevel" : "public",
      "declarationFragments" : [
        {
          "kind" : "identifier",
          "spelling" : "TestExtensionsHardNewlines"
        }
      ],
      "identifier" : {
        "interfaceLanguage" : "occ",
        "precise" : "c:@E@TestExtensions@TestExtensionsHardNewlines"
      },
      "kind" : {
        "displayName" : "Enumeration Case",
        "identifier" : "enum.case"
      },
      "location" : {
        "position" : {
          "character" : 4,
          "line" : 42
        },
        "uri" : "Test.h"
      },
      "names" : {
        "navigator" : [
          {
            "kind" : "identifier",
            "spelling" : "TestExtensionsHardNewlines"
          }
        ],
        "subHeading" : [
          {
            "kind" : "identifier",
            "spelling" : "TestExtensionsHardNewlines"
          }
        ],
        "title" : "TestExtensionsHardNewlines"
      },
      "pathComponents" : [
        "TestExtensions",
        "TestExtensionsHardNewlines"
      ]
    },
    {
      "accessLevel" : "public",
      "declarationFragments" : [
        {
          "kind" : "identifier",
          "spelling" : "TestExtensionsNone"
        }
      ],
      "identifier" : {
        "interfaceLanguage" : "occ",
        "precise" : "c:@E@TestExtensions@TestExtensionsNone"
      },
      "kind" : {
        "displayName" : "Enumeration Case",
        "identifier" : "enum.case"
      },
      "location" : {
        "position" : {
          "character" : 4,
          "line" : 35
        },
        "uri" : "Test.h"
      },
      "names" : {
        "navigator" : [
          {
            "kind" : "identifier",
            "spelling" : "TestExtensionsNone"
          }
        ],
        "subHeading" : [
          {
            "kind" : "identifier",
            "spelling" : "TestExtensionsNone"
          }
        ],
        "title" : "TestExtensionsNone"
      },
      "pathComponents" : [
        "TestExtensions",
        "TestExtensionsNone"
      ]
    },
    {
      "accessLevel" : "public",
      "declarationFragments" : [
        {
          "kind" : "identifier",
          "spelling" : "TestExtensionsStrikethroughs"
        }
      ],
      "identifier" : {
        "interfaceLanguage" : "occ",
        "precise" : "c:@E@TestExtensions@TestExtensionsStrikethroughs"
      },
      "kind" : {
        "displayName" : "Enumeration Case",
        "identifier" : "enum.case"
      },
      "location" : {
        "position" : {
          "character" : 4,
          "line" : 43
        },
        "uri" : "Test.h"
      },
      "names" : {
        "navigator" : [
          {
            "kind" : "identifier",
            "spelling" : "TestExtensionsStrikethroughs"
          }
        ],
        "subHeading" : [
          {
            "kind" : "identifier",
            "spelling" : "TestExtensionsStrikethroughs"
          }
        ],
        "title" : "TestExtensionsStrikethroughs"
      },
      "pathComponents" : [
        "TestExtensions",
        "TestExtensionsStrikethroughs"
      ]
    },
    {
      "accessLevel" : "public",
      "declarationFragments" : [
        {
          "kind" : "identifier",
          "spelling" : "TestExtensionsTables"
        }
      ],
      "identifier" : {
        "interfaceLanguage" : "occ",
        "precise" : "c:@E@TestExtensions@TestExtensionsTables"
      },
      "kind" : {
        "displayName" : "Enumeration Case",
        "identifier" : "enum.case"
      },
      "location" : {
        "position" : {
          "character" : 4,
          "line" : 45
        },
        "uri" : "Test.h"
      },
      "names" : {
        "navigator" : [
          {
            "kind" : "identifier",
            "spelling" : "TestExtensionsTables"
          }
        ],
        "subHeading" : [
          {
            "kind" : "identifier",
            "spelling" : "TestExtensionsTables"
          }
        ],
        "title" : "TestExtensionsTables"
      },
      "pathComponents" : [
        "TestExtensions",
        "TestExtensionsTables"
      ]
    },
    {
      "accessLevel" : "public",
      "declarationFragments" : [
        {
          "kind" : "identifier",
          "spelling" : "TestExtensionsUnderscoresInWords"
        }
      ],
      "identifier" : {
        "interfaceLanguage" : "occ",
        "precise" : "c:@E@TestExtensions@TestExtensionsUnderscoresInWords"
      },
      "kind" : {
        "displayName" : "Enumeration Case",
        "identifier" : "enum.case"
      },
      "location" : {
        "position" : {
          "character" : 4,
          "line" : 46
        },
        "uri" : "Test.h"
      },
      "names" : {
        "navigator" : [
          {
            "kind" : "identifier",
            "spelling" : "TestExtensionsUnderscoresInWords"
          }
        ],
        "subHeading" : [
          {
            "kind" : "identifier",
            "spelling" : "TestExtensionsUnderscoresInWords"
          }
        ],
        "title" : "TestExtensionsUnderscoresInWords"
      },
      "pathComponents" : [
        "TestExtensions",
        "TestExtensionsUnderscoresInWords"
      ]
    },
    {
      "accessLevel" : "public",
      "declarationFragments" : [
        {
          "kind" : "keyword",
          "spelling" : "extern"
        },
        {
          "kind" : "text",
          "spelling" : " "
        },
        {
          "kind" : "typeIdentifier",
          "preciseIdentifier" : "c:d",
          "spelling" : "double"
        },
        {
          "kind" : "text",
          "spelling" : " "
        },
        {
          "kind" : "identifier",
          "spelling" : "TestVersionNumber"
        }
      ],
      "docComment" : {
        "lines" : [
          {
            "range" : {
              "end" : {
                "character" : 42,
                "line" : 27
              },
              "start" : {
                "character" : 4,
                "line" : 27
              }
            },
            "text" : "Project version number for Test."
          }
        ]
      },
      "identifier" : {
        "interfaceLanguage" : "occ",
        "precise" : "c:@TestVersionNumber"
      },
      "kind" : {
        "displayName" : "Global Variable",
        "identifier" : "var"
      },
      "location" : {
        "position" : {
          "character" : 25,
          "line" : 28
        },
        "uri" : "Test.h"
      },
      "names" : {
        "navigator" : [
          {
            "kind" : "identifier",
            "spelling" : "TestVersionNumber"
          }
        ],
        "subHeading" : [
          {
            "kind" : "identifier",
            "spelling" : "TestVersionNumber"
          }
        ],
        "title" : "TestVersionNumber"
      },
      "pathComponents" : [
        "TestVersionNumber"
      ]
    },
    {
      "accessLevel" : "public",
      "declarationFragments" : [
        {
          "kind" : "keyword",
          "spelling" : "extern"
        },
        {
          "kind" : "text",
          "spelling" : " "
        },
        {
          "kind" : "keyword",
          "spelling" : "const"
        },
        {
          "kind" : "text",
          "spelling" : " "
        },
        {
          "kind" : "typeIdentifier",
          "preciseIdentifier" : "c:c",
          "spelling" : "unsigned char"
        },
        {
          "kind" : "text",
          "spelling" : " "
        },
        {
          "kind" : "identifier",
          "spelling" : "TestVersionString"
        },
        {
          "kind" : "text",
          "spelling" : "[]"
        }
      ],
      "docComment" : {
        "lines" : [
          {
            "range" : {
              "end" : {
                "character" : 42,
                "line" : 30
              },
              "start" : {
                "character" : 4,
                "line" : 30
              }
            },
            "text" : "Project version string for Test."
          }
        ]
      },
      "identifier" : {
        "interfaceLanguage" : "occ",
        "precise" : "c:@TestVersionString"
      },
      "kind" : {
        "displayName" : "Global Variable",
        "identifier" : "var"
      },
      "location" : {
        "position" : {
          "character" : 38,
          "line" : 31
        },
        "uri" : "Test.h"
      },
      "names" : {
        "navigator" : [
          {
            "kind" : "identifier",
            "spelling" : "TestVersionString"
          }
        ],
        "subHeading" : [
          {
            "kind" : "identifier",
            "spelling" : "TestVersionString"
          }
        ],
        "title" : "TestVersionString"
      },
      "pathComponents" : [
        "TestVersionString"
      ]
    }
  ]
}